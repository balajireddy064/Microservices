package com.ayusha.products.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ayusha.products.data.models.ProductDataModel;
import com.ayusha.products.data.models.ProductsDataModel;
import com.ayusha.products.service.entity.MakeEntity;
import com.ayusha.products.service.entity.ProductEntity;
import com.ayusha.products.service.repository.IProductRepository;
import com.ayusha.services.common.exceptions.DataPersistenceOperationException;
import com.ayusha.services.common.exceptions.InvalidServiceRequestException;
import com.custom.logger.logging.Logger;
import com.custom.logger.manager.LogManager;

/**
 * 
 * @author author1
 * Date : 01-Aug-2019
 * 
 */
@Service
public class ProductService implements IProductService{
	
	/** LOGGER **/
	private static Logger LOG = LogManager.getLogger(ProductService.class);
	
	/** repository **/
	@Autowired
	private IProductRepository iProductRepository;
	/**
	 * default constructor
	 */
	public ProductService() {
		
	}

	/** add **/
	public ProductDataModel getProductById(String productId) throws DataPersistenceOperationException,InvalidServiceRequestException{
		ProductDataModel productDataModel = new ProductDataModel();
		ProductEntity productEntity=  iProductRepository.findProductByProductId(productId);
		
		productDataModel.setId(Integer.parseInt(""+productEntity.getId()));
		productDataModel.setCategoryId(productEntity.getCategoryId());
		productDataModel.setSubCategoryId(productEntity.getSubCategoryId());
		productDataModel.setMakeId(productEntity.getMake_id());
		productDataModel.setProductId(productId);
		productDataModel.setModelId(productEntity.getModelId());
		productDataModel.setMakeId(productEntity.getMake_id());
		return productDataModel;
	}
	public ProductDataModel getProductFor(String categoryId,String subCategoryId,String makeId,String modelId) throws DataPersistenceOperationException,InvalidServiceRequestException{
		ProductDataModel productDataModel = new ProductDataModel();
		ProductEntity productEntity=  iProductRepository.findProduct(categoryId, subCategoryId, makeId, modelId);
		
		productDataModel.setId(Integer.parseInt(""+productEntity.getId()));
		productDataModel.setCategoryId(productEntity.getCategoryId());
		productDataModel.setSubCategoryId(productEntity.getSubCategoryId());
		productDataModel.setMakeId(productEntity.getMake_id());
		productDataModel.setProductId(productEntity.getProductId());
		productDataModel.setModelId(productEntity.getModelId());
		productDataModel.setMakeId(productEntity.getMake_id());
		return productDataModel;
	}
	
	/** add **/
	public ProductsDataModel getProductFor(String categoryId,String subCategoryId,String makeId) throws DataPersistenceOperationException,InvalidServiceRequestException{
		ProductDataModel productDataModel = new ProductDataModel();
		List<ProductEntity> lstMakeEntity=  iProductRepository.findProduct(categoryId, subCategoryId, makeId);
		List<ProductDataModel> lstProductDataModel= new ArrayList();
		ProductEntity productEntity = null;
		int size =0;
		
		size = lstMakeEntity.size();
		for(int index=0; index<size; index++) {
			productDataModel = new ProductDataModel();
			productEntity = lstMakeEntity.get(index);
			productDataModel.setId(Integer.parseInt(""+productEntity.getId()));
			productDataModel.setCategoryId(productEntity.getCategoryId());
			productDataModel.setSubCategoryId(productEntity.getSubCategoryId());
			productDataModel.setMakeId(productEntity.getMake_id());
			productDataModel.setModelId(productEntity.getModelId());
			lstProductDataModel.add(productDataModel);
		}
		ProductsDataModel productsDataModel = new ProductsDataModel();
		productsDataModel.setLstProductDataModel(lstProductDataModel);
		return productsDataModel;
	}
	/** update **/
	public ProductDataModel updateProduct(ProductDataModel productDataModel) throws DataPersistenceOperationException,InvalidServiceRequestException{
		ProductEntity productEntity = new ProductEntity();
		
		productEntity.setId(productDataModel.getId());
		productEntity.setProductId(productDataModel.getProductId());
		productEntity.setMake_id(productDataModel.getMakeId());
		productEntity.setModelId(productDataModel.getModelId());
		productEntity.setCategoryId(productDataModel.getCategoryId());
		productEntity.setSubCategoryId(productDataModel.getSubCategoryId());
		iProductRepository.save(productEntity);
		return productDataModel;
	}
	/** update **/
	public ProductDataModel add(ProductDataModel productDataModel) throws DataPersistenceOperationException,InvalidServiceRequestException{
		
		ProductEntity productEntity = new ProductEntity();
		
		productEntity.setId(productDataModel.getId());
		productEntity.setProductId(productDataModel.getProductId());
		productEntity.setMake_id(productDataModel.getMakeId());
		productEntity.setModelId(productDataModel.getModelId());
		productEntity.setCategoryId(productDataModel.getCategoryId());
		productEntity.setSubCategoryId(productDataModel.getSubCategoryId());
		iProductRepository.save(productEntity);
		return productDataModel;
	}
}
