package com.ayusha.user.services.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ayusha.json.utils.JSONConverter;
import com.ayusha.services.common.exceptions.DataPersistenceOperationException;
import com.ayusha.services.common.exceptions.InvalidServiceRequestException;
import com.ayusha.services.common.exceptions.ResourceNotFoundException;
import com.ayusha.services.common.exceptions.ServiceRequestProcessor;
import com.ayusha.user.data.models.UserDataModel;
import com.ayusha.user.service.IUserService;
import com.ayusha.user.services.data.model.CityDataModel;
import com.ayusha.user.services.entity.UserEntity;
import com.custom.logger.logging.Logger;
import com.custom.logger.manager.LogManager;

/**
* This is the service api interface.
* This controls the access to the services
*
* @author  author1r
* @version 1.0
* @since   2019-05-03 
*/
@RestController
@RequestMapping("/users")
public class UserServicesController extends ServiceRequestProcessor{
	
	/** Logger **/
	private static Logger LOG = LogManager.getLogger(UserServicesController.class);
	
	/** repository **/
	@Autowired
	private IUserService iUserService;
	/**
	 * 
	 * 
	 */
	@PostMapping("/user/add")
	public String addUser(@RequestBody String requestBody,HttpServletRequest httpServletRequest,HttpServletResponse httpServletResponse) throws DataPersistenceOperationException,Exception,InvalidServiceRequestException,ResourceNotFoundException{
		LOG.info("entered job notes creation - start");
		UserDataModel userDataModel = null;
		
		int size=0;
		String strRequestBody = preProcess(requestBody,httpServletRequest,httpServletResponse);
		
		strRequestBody = postProcess(requestBody,httpServletRequest,httpServletResponse);
		userDataModel = (UserDataModel)JSONConverter.convertStringToPOJO(requestBody, UserDataModel.class);
		
		iUserService.save(userDataModel);
		LOG.info("successfully completed add job notes operation ");
		return JSONConverter.convertPOJOToString(userDataModel);
	}
	/**
	 * 
	 * 
	 */
	@PostMapping("/update")
	public String updateState(@RequestBody String requestBody,HttpServletRequest httpServletRequest,HttpServletResponse httpServletResponse) throws DataPersistenceOperationException,Exception,InvalidServiceRequestException,ResourceNotFoundException{
		LOG.info("entered job notes creation - start");
		CityDataModel cityDataModel = null;
		UserEntity cityEntity = null;
		int size=0;
		String strRequestBody = preProcess(requestBody,httpServletRequest,httpServletResponse);
		
		strRequestBody = postProcess(requestBody,httpServletRequest,httpServletResponse);
		cityDataModel = (CityDataModel)JSONConverter.convertStringToPOJO(requestBody, CityDataModel.class);
		cityEntity = new UserEntity();
		cityEntity.setCityCode(cityDataModel.getCityCode());
		cityEntity.setName(cityDataModel.getName());
		cityEntity.setStateCode(cityDataModel.getStateCode());
		iUserService.save(cityDataModel);
		LOG.info("successfully completed add job notes operation ");
		return JSONConverter.convertPOJOToString(cityDataModel);
	}
	
	/**
	 * 
	 * 
	 */
	@GetMapping("/find")
	public String findCountry(@RequestParam("citycode") String citycode,HttpServletRequest httpServletRequest,HttpServletResponse httpServletResponse) throws DataPersistenceOperationException,Exception,InvalidServiceRequestException,ResourceNotFoundException{
		LOG.info("entered symptoms finding - start chedddd");
		return JSONConverter.convertPOJOToString(iUserService.getCity(citycode));
	}
	
	/**
	 * 
	 * 
	 */
	@GetMapping("/findAll")
	public String findStates(@RequestParam("statecode") String statecode,HttpServletRequest httpServletRequest,HttpServletResponse httpServletResponse) throws DataPersistenceOperationException,Exception,InvalidServiceRequestException,ResourceNotFoundException{
		LOG.info("entered symptoms finding - start fffffffffff "+statecode);
		return JSONConverter.convertPOJOToString(iUserService.getCities(statecode));
	}
}
