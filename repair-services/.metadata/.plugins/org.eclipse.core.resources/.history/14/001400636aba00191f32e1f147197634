package com.ayusha.tktmgmt.data;

import java.util.ArrayList;

import com.ayusha.http.client.ServicesClient;
import com.ayusha.http.client.models.ServiceResponse;
import com.ayusha.http.constants.HTTPConstants;
import com.ayusha.json.utils.JSONConverter;
import com.ayusha.repair.services.constants.RepairServiceConstants;
import com.ayusha.repair.services.data.models.FaultyItemsDataModel;
import com.ayusha.repair.services.data.models.JobNotesDataModel;
import com.ayusha.repair.services.data.models.SymptomsDataModel;
import com.ayusha.services.common.exceptions.ServicesDataException;

/**
 * 
 * @author author1
 * 07-Aug-2019
 * Gets the ticket data
 *
 */
public class RepairFaultyItemsDataHandler {
	
	/** singleon object reference **/
	private final static RepairFaultyItemsDataHandler repairFaultyItemsDataHandler = new RepairFaultyItemsDataHandler();
	
	/** selected ticket id **/
	private String selectedJobId="9";
	
	/** selected ticket **/
	private JobNotesDataModel jobNotesDataModel = null;
	
	/** 
	
	
	/**
	 * default constructor
	 */
	private RepairFaultyItemsDataHandler() {
		
	}
	
	
	/**
	 * returns singleton reference
	 */
	public static RepairFaultyItemsDataHandler getInstance() {
		return repairFaultyItemsDataHandler;
	}
	
	/**
	 * get ticket data
	 */
	public FaultyItemsDataModel getFaultyItems(String jobId) throws ServicesDataException{
		
		ServicesClient servicesClient = null;
		ServiceResponse serviceResponse = null;
		ServicesDataException servicesDataException = null;
		FaultyItemsDataModel faultyItemsDataModel = null;
		String jobNotesServiceName=RepairServiceConstants.GET_REPAIR_SYMPTOMS_SERVICE_NAME;
		
		jobNotesServiceName = jobNotesServiceName.replace("$1", jobId);
		
		servicesClient = ServicesClient.getInstance();
		try {
			serviceResponse = servicesClient.execute(jobNotesServiceName,"",HTTPConstants.GET);
			faultyItemsDataModel = ((FaultyItemsDataModel)JSONConverter.convertStringToPOJO(""+serviceResponse.getResponse(),FaultyItemsDataModel.class));
			if(faultyItemsDataModel==null) {
				faultyItemsDataModel= new SymptomsDataModel();
				faultyItemsDataModel.setJob_id(jobId);
				faultyItemsDataModel.setLstSymptoms(new ArrayList());
			}
			return faultyItemsDataModel;
		}catch(Exception e) {
			faultyItemsDataModel= new SymptomsDataModel();
			faultyItemsDataModel.setJob_id(jobId);
			faultyItemsDataModel.setLstSymptoms(new ArrayList());
			return faultyItemsDataModel;
		}
	}
	
	/**
	 * get ticket data
	 */
	public void updateRepairSymptoms(SymptomsDataModel symptomsDataModel) throws ServicesDataException{
		
		ServicesClient servicesClient = null;
		ServiceResponse serviceResponse = null;
		ServicesDataException servicesDataException = null;
		
		String updateJobNotesServiceName=RepairServiceConstants.UPDATE_REPAIR_SYMPTOMS_SERVICE_NAME;
	
		servicesClient = ServicesClient.getInstance();
		try {
			System.out.println(" PAYLOAD "+JSONConverter.convertPOJOToString(symptomsDataModel));
			serviceResponse = servicesClient.execute(updateJobNotesServiceName,JSONConverter.convertPOJOToString(symptomsDataModel),HTTPConstants.POST);
		}catch(Exception e) {
			servicesDataException = new ServicesDataException();
			servicesDataException.setErrorCode(HTTPConstants.INTERNAL_ERROR);
			servicesDataException.setErrorMessage(HTTPConstants.HTTP_INTERNAL_ERROR_MESSAGE);
			throw servicesDataException;
		}	
	}
}
